#! /usr/bin/env bash
# 2014, Moritz Kaspar Rudert (mortzu) <mr@planetcyborg.de>.
# All rights reserved.

# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this list of
#   conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice, this list
#   of conditions and the following disclaimer in the documentation and/or other materials
#   provided with the distribution.
#
# * The names of its contributors may not be used to endorse or promote products derived
#   from this software without specific prior written permission.
#
# * Feel free to send Club Mate to support the work.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS
# AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

PATH=/bin:/usr/bin:/sbin:/usr/sbin

declare OUTPUT=''

declare -i STATE_OK=0
declare -i STATE_WARNING=1
declare -i STATE_CRITICAL=2
declare -i STATE_UNKNOWN=3

declare -i NUM=0
declare -i NUM_OK=0
declare -i NUM_WARN=0
declare -i NUM_CRIT=0

declare -a IGNORE

for ARG in "$@"; do
  if [[ "$ARG" =~ ^--ignore= ]]; then
    IGNORE+=("${ARG#--ignore=}")
  fi
done

LIST="$(virsh list --all | sed -e '1,2d' -e '/^$/d'| awk '{ print $2":"$3 }')"

if [ -n "$LIST" ]; then
  for HOST_LINE in $LIST; do
    HOST_NAME="$(awk -F: '{ print $1 }' <<<${HOST_LINE})"
    STATE="$(awk -F: '{print $2}' <<<${HOST_LINE})"
    NUM=$(expr $NUM + 1)

    NOCHECK=false

    for IGNORED_HOST in "${IGNORE[@]}"; do
      if [ "$IGNORED_HOST" = "$HOST_NAME" ]; then
        NOCHECK=true
        break
      fi
    done

    if $NOCHECK; then
      NUM_OK=$(expr $NUM_OK + 1)
      continue
    fi

    case "$STATE" in
      running|blocked)
        NUM_OK=$(expr $NUM_OK + 1)
      ;;
      paused)
        NUM_WARN=$(expr $NUM_WARN + 1)
        OUTPUT="${OUTPUT}${HOST_NAME} "
      ;;
      shutdown|shut*|crashed|*)
        NUM_CRIT=$(expr $NUM_CRIT + 1)
        OUTPUT="${OUTPUT}${HOST_NAME} "
      ;;
    esac
  done
else
  echo 'Unknown guests!'
  exit ${STATE_UNKNOWN}
fi

if [ $NUM -eq $NUM_OK ]; then
  echo "${NUM_OK}/${NUM} running"
  exit $STATE_OK
elif [ $NUM_CRIT -gt 0 ]; then
  echo "${NUM_OK}/${NUM} running, ${NUM_WARN}/${NUM} paused, ${NUM_CRIT}/${NUM} broken: $OUTPUT"
  exit $STATE_CRITICAL
elif [ $NUM_WARN -gt 0 ]; then
  echo "${NUM_OK}/${NUM} running, ${NUM_WARN}/${NUM} paused, ${NUM_CRIT}/${NUM} broken: $OUTPUT"
  exit $STATE_WARNING
fi
