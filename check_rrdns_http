#! /usr/bin/env bash
# 2014, Moritz Kaspar Rudert (mortzu) <mr@planetcyborg.de>.
# All rights reserved.

# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this list of
#   conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice, this list
#   of conditions and the following disclaimer in the documentation and/or other materials
#   provided with the distribution.
#
# * The names of its contributors may not be used to endorse or promote products derived
#   from this software without specific prior written permission.
#
# * Feel free to send Club Mate to support the work.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS
# AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

declare -i STATE_OK=0
declare -i STATE_WARNING=1
declare -i STATE_CRITICAL=2
declare -i STATE_UNKNOWN=3

declare -i ERR_CODE=$STATE_OK
declare -i EXPIRE_DATE=0

for ARG in "$@"; do
  if [[ "$ARG" =~ ^--host= ]]; then
    HOST_NAME="${ARG#--host=}"
  fi
done

if [ -z "$HOST_NAME" ]; then
  ERR_MSG="No hosts given"
  ERR_CODE=$STATE_UNKNOWN
else
  HOSTS_IP4="$(host ${HOST_NAME} 2>/dev/null | grep ' has address ' | cut -d' ' -f4)"
  HOSTS_IP6="$(host ${HOST_NAME} 2>/dev/null | grep ' has IPv6 address ' | cut -d' ' -f5)"

  if [ -z "$HOSTS_IP4" -a -z "$HOSTS_IP6" ]; then
    ERR_MSG="${HOST_NAME} returns no ip addresses"
    ERR_CODE=$STATE_UNKNOWN
  else
    for HOST in $HOSTS_IP4; do
      if ! /usr/lib/nagios/plugins/check_http -4 -I $HOST -H ${HOST_NAME} -u / >/dev/null 2>&1; then
        ERR_CODE=1
        ERR_MSG="${ERR_MSG}$HOST (IPv4) does not respond! "
      fi
    done

    for HOST in $HOSTS_IP6; do
      if ! /usr/lib/nagios/plugins/check_http -6 -I $HOST -H ${HOST_NAME} -u / >/dev/null 2>&1; then
        ERR_CODE=1
        ERR_MSG="${ERR_MSG}$HOST (IPv6) does not respond! "
      fi
    done
  fi
fi

if [ $ERR_CODE -eq $STATE_OK ]; then
  echo "OK: All hosts responded!"
else
  echo "CRITICAL: ${ERR_MSG}"
fi

exit $ERR_CODE
