#! /usr/bin/env bash

declare -i STATE_OK=0
declare -i STATE_WARNING=1
declare -i STATE_CRITICAL=2
declare -i STATE_UNKNOWN=3

declare -i ERR_CODE=$STATE_OK

declare -a UPSTREAM_VER

SEARCH_DIR="$1"

if [ -z "$SEARCH_DIR" ]; then
  ERR_MSG="No search directory given!"
  ERR_CODE=$STATE_UNKNOWN
else
  UPSTREAM_VER=( $( curl -s https://www.mediawiki.org/wiki/Download | grep 'download:' | grep mbox-text-span | cut -d ' ' -f 3 ) )

  if [ -z "$UPSTREAM_VER" ]; then
    ERR_MSG="Could not get remote version!"
    ERR_CODE=$STATE_UNKNOWN
  else
    for file in $(find ${SEARCH_DIR} -type f -name DefaultSettings.php); do
      LOCAL_DIR=$(dirname "$file" | sed 's#/includes##g')
      if grep -q '^\$wgVersion' $file; then
        dirname "$file" | grep -q '\.bu' && continue
        LOCAL_VER=$(grep '^\$wgVersion' $file | cut -d "'" -f 2)
        LOCAL_MAJ_VER=$(echo "$LOCAL_VER" | awk -F \. '{ print $1"."$2 }')

        echo ${UPSTREAM_VER[@]} | sed 's# #\n#g' | grep -q $LOCAL_VER && continue

        UP_VER=$(echo ${UPSTREAM_VER[@]} | sed 's# #\n#g' | grep $LOCAL_MAJ_VER)
        [ -z $UP_VER ] && UP_VER=$(echo ${UPSTREAM_VER[@]} | sed 's# #\n#g' | head -n1)

        ERR_CODE=$STATE_CRITICAL
        ERR_MSG="${ERR_MSG}${LOCAL_DIR} is not up to date (${LOCAL_VER} vs. ${UP_VER}), "
      fi
    done
  fi
fi

if [ -n "$ERR_MSG" ]; then
  echo "ERROR: $ERR_MSG" | sed 's/, $//g'
else
  echo "OK: all local MediaWiki are up to date"
fi

exit $ERR_CODE
