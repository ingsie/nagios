#! /usr/bin/env bash

declare -i STATE_OK=0
declare -i STATE_WARNING=1
declare -i STATE_CRITICAL=2
declare -i STATE_UNKNOWN=3

declare -i ERR_CODE=$STATE_OK

declare -a WHITELIST_DNS
declare -a WHITELIST_HTTP

declare EXPECTED_IP

LIGHTTPD_BIN="$(which lighttpd 2>/dev/null)"

if [ ! -x /usr/lib/nagios/plugins/check_http ]; then
  ERR_MSG="check_http not found"
  ERR_CODE=$STATE_UNKNOWN
elif [ ! -x /usr/lib/nagios/plugins/check_dns ]; then
  ERR_MSG="check_dns not found"
  ERR_CODE=$STATE_UNKNOWN
elif [ -z "${LIGHTTPD_BIN}" ]; then
  ERR_MSG="lighttpd binary not found"
  ERR_CODE=$STATE_UNKNOWN
else
  for ARG in "$@"; do
    if [[ "$ARG" =~ ^--no-dns= ]]; then
      WHITELIST_DNS+=("${ARG#--no-dns=}")
    elif [[ "$ARG" =~ ^--no-http= ]]; then
      WHITELIST_HTTP+=("${ARG#--no-http=}")
    elif [[ "$ARG" =~ ^--expected-ip= ]]; then
      EXPECTED_IP="${ARG#--expected-ip=}"
    fi
  done

  if [ -z "$EXPECTED_IP" ]; then
    ERR_MSG="No expected IP-address given"
    ERR_CODE=$STATE_UNKNOWN
  else
    for DOMAIN in $(lighttpd -p -f /etc/lighttpd/lighttpd.conf | grep '$HTTP\["host"\] == ' | cut -d'"' -f4 | sort -u); do
      if ! echo "${EXCLUDE_HTTP[*]}" | grep -q $DOMAIN; then
        if ! /usr/lib/nagios/plugins/check_http -H "$DOMAIN" -u / >/dev/null 2>&1; then
          ERR_MSG="${ERR_MSG}$DOMAIN does not reply, "
          ERR_CODE=$STATE_CRITICAL
        fi
      fi

      if ! echo "${EXCLUDE_DNS[*]}" | grep -q $DOMAIN; then
        if ! /usr/lib/nagios/plugins/check_dns -H "$DOMAIN" -a "$EXPECTED_IP" >/dev/null 2>&1; then
          ERR_MSG="${ERR_MSG}$DOMAIN does not resolve correctly, "
          ERR_CODE=$STATE_CRITICAL
        fi
      fi
    done
  fi
fi

case $ERR_CODE in
  $STATE_OK)
    echo "OK: All hosts replied correctly."
    ;;
  $STATE_UNKNOWN)
    echo "UNKNOWN: $ERR_MSG"
    ;;
  $STATE_CRITICAL)
    echo "ERROR: ${ERR_MSG}" | sed 's/, $//'
    ;;
esac

exit $ERR_CODE
