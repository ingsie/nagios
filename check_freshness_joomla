#! /usr/bin/env bash
# 2014, Moritz Kaspar Rudert (mortzu) <mr@planetcyborg.de>.
# All rights reserved.

# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this list of
#   conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice, this list
#   of conditions and the following disclaimer in the documentation and/or other materials
#   provided with the distribution.
#
# * The names of its contributors may not be used to endorse or promote products derived
#   from this software without specific prior written permission.
#
# * Feel free to send Club Mate to support the work.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS
# AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

PATH=/sbin:/usr/sbin:/bin:/usr/bin

declare -i STATE_OK=0
declare -i STATE_WARNING=1
declare -i STATE_CRITICAL=2
declare -i STATE_UNKNOWN=3

declare -i ERR_CODE=$STATE_OK

declare -a UPSTREAM_VER

SOFTWARE_NAME="Joomla"
SEARCH_DIR="$1"

OLD_IFS="$IFS"
IFS=$'\n'
IFS="${IFS}${OLD_IFS}"

if [ -z "$SEARCH_DIR" ]; then
  ERR_MSG="No search directory given!"
  ERR_CODE=$STATE_UNKNOWN
else
  UPSTREAM_VER=( $(curl -f http://update.joomla.org/core/list.xml 2>/dev/null | grep -oP '(?<= version=")[^"]*' | sort -n | uniq) )

  if [ -z "$UPSTREAM_VER" ]; then
    ERR_MSG="Could not get remote version!"
    ERR_CODE=$STATE_UNKNOWN
  else
    for file in $(find ${SEARCH_DIR} -type d -name '*.bu' -prune -o \( -path '*/libraries/joomla/*' -o -path '*/libraries/cms/version*' -o -path '*/includes/*' \) -type f -name version.php -print); do
      LOCAL_DIR="$(dirname "$file" | sed -e 's#/libraries/joomla##g' -e 's#/libraries/cms/version##g' -e 's#/includes##g')"
      grep -q 'Joomla' "$file" || continue
      if grep -q 'RELEASE' "$file"; then
        LOCAL_VER="$(grep '\$RELEASE' "$file" | cut -d "'" -f 2).$(grep '\$DEV_LEVEL' "$file" | cut -d "'" -f 2)"
        LOCAL_MAJ_VER="$(echo "$LOCAL_VER" | cut -d '.' -f 1-2)"

        if grep -q "$LOCAL_VER" <<< "${UPSTREAM_VER[*]}"; then
          continue
        fi

        UP_VER="$(grep $LOCAL_MAJ_VER <<< "${UPSTREAM_VER[*]}")"
        if [ -z "$UP_VER" ]; then
          UP_VER="$(head -n1 <<< "${UPSTREAM_VER[*]}")"
        fi

        ERR_CODE=$STATE_CRITICAL
        ERR_MSG="${ERR_MSG}${LOCAL_DIR##$SEARCH_DIR} (${LOCAL_VER} vs. ${UP_VER}), "
      fi
    done
  fi
fi

IFS="$OLD_IFS"

case $ERR_CODE in
  $STATE_OK)
    echo "OK: all local ${SOFTWARE_NAME} are up to date (${UPSTREAM_VER[*]})"
  ;;
  $STATE_UNKNOWN)
    echo "UNKNOWN: $ERR_MSG"
  ;;
  $STATE_CRITICAL)
    echo "ERROR: Not up to date: ${ERR_MSG}" | sed 's/, $//'
  ;;
esac

exit $ERR_CODE
